# TypeProf 0.12.0

# Classes
module ColorContrastCalc
  module Converter
    type rgb_val = [Integer, Integer, Integer]
    type rgba_val = [Integer, Integer, Integer, Float | Integer]
    type unrounded_val = Float | Integer
    type raw_rgba_val = [unrounded_val, unrounded_val, unrounded_val, unrounded_val]

    def self.rgb_map: ([unrounded_val, unrounded_val, unrounded_val] vals) ?{ (?unrounded_val?) -> (unroundred_val?) } -> rgb_val

    module AlphaCompositing
      def self.compose: (rgba_val foreground, rgba_val background, ?rgba_val base) -> {foreground: rgba_val, background: rgba_val}
      def self.normalize: (raw_rgba_val raw_rgba) -> rgba_val
      def self.calc: (rgba_val source, rgba_val backdrop) -> raw_rgba_val

      module Rgba
        BLACK: rgba_val
        WHITE: rgba_val
      end
    end

    module Contrast
      def self.calc_rgb: (rgb_val rgb, ?unrounded_val ratio) -> rgb_val
    end

    module Brightness
      def self.calc_rgb: (rgb_val rgb, ?unrounded_val ratio) -> rgb_val
    end

    module Invert
      def self.calc_rgb: (rgb_val rgb, unrounded_val ratio) -> rgb_val
    end

    module HueRotate
      CONST_PART: Matrix
      COS_PART: Matrix
      SIN_PART: Matrix

      def self.calc_rgb: (rgb_val rgb, unrounded_val deg) -> rgb_val
      def self.deg_to_rad: (unrounded_val deg) -> Float
      def self.calc_rotation: (unrounded_val deg) -> Matrix
    end

    module Saturate
      CONST_PART: Matrix
      SATURATE_PART: Matrix

      def self.calc_rgb: (rgb_val rgb, unrounded_val s) -> rgb_val
      def self.calc_saturation: (unrounded_val s) -> Matrix
    end

    module Grayscale
      CONST_PART: Matrix
      RATIO_PART: Matrix

      def self.calc_rgb: (rgb_val rgb, unrounded_val s) -> rgb_val
      def self.calc_grayscale: (unrounded_val s) -> Matrix
    end
  end
end

class Matrix
  alias element []
  alias component []

  private
  alias set_element []=
  alias set_component []=

  public
  alias map! collect!
end

class Vector
  alias element []
  alias component []

  private
  alias set_element []=
  alias set_component []=

  public
  alias map! collect!
end

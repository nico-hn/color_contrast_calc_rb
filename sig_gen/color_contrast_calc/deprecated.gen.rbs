# TypeProf 0.12.0

# Classes
module ColorContrastCalc
# def self.color_from: (untyped color_value, ?nil name) -> Color
# def self.sort: (untyped colors, ?String color_order, ?nil key_mapper) -> untyped
# def self.contrast_ratio: (untyped color1, nil color2) -> Float
# def self.contrast_ratio_with_opacity: (untyped foreground, untyped background, ?nil base) -> untyped
# def self.higher_contrast_base_color_for: (untyped color, ?light_base: nil, ?dark_base: untyped) -> nil
# def self.named_colors: (?frozen: true) -> untyped
# def self.web_safe_colors: (?frozen: true) -> Array[Color]
# def self.hsl_colors: (?s: Integer, ?l: Integer, ?h_interval: Integer) -> Array[Color]

  module Deprecated
    def self.warn: (untyped old_method, :from_hsl | :with_brightness | :with_contrast | :with_grayscale | :with_hue_rotate | :with_invert | :with_saturate new_method) -> nil

    module Color
      def new_contrast_color: (untyped ratio, ?nil name) -> untyped
      def new_brightness_color: (untyped ratio, ?nil name) -> untyped
      def new_invert_color: (?Integer ratio, ?nil name) -> untyped
      def new_hue_rotate_color: (untyped degree, ?nil name) -> untyped
      def new_saturate_color: (untyped ratio, ?nil name) -> untyped
      def new_grayscale_color: (?Integer ratio, ?nil name) -> untyped

      module Factory
        def new_from_hsl: (untyped hsl, ?nil name) -> untyped
      end
    end
  end
end
